{"version":3,"sources":["img/Rock.jpg","img/Scissors.jpg","img/Paper.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","win","loss","tie","roundWin","roundLoss","roundTie","playGame","human","result","computer","choices","chosen","Math","floor","random","length","document","getElementById","src","Rock","Paper","Scissors","console","log","RockPaperScissors","keepScore","querySelector","innerHTML","games","indexOf","max","swal","then","clearAll","body","style","className","id","width","height","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a6ec8c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rock.d6d165b5.jpg\";","export default __webpack_public_path__ + \"static/media/Scissors.f347a0de.jpg\";","export default __webpack_public_path__ + \"static/media/Paper.57c9e505.jpg\";","import Rock from './img/Rock.jpg'\nimport Scissors from './img/Scissors.jpg'\nimport Paper from './img/Paper.jpg'\nimport './App.css';\nimport swal from 'sweetalert';\n\n\nfunction App() {\n\n  let win =0;\n  let loss = 0;\n  let tie = 0;\n  let roundWin = 0;\n  let roundLoss = 0;\n  let roundTie = 0;\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n }\n\n  async function animateComputer(){\n    let images=[Rock,Paper,Scissors];\n    for (let i = 0; i < 10; i++) {\n      let source = images[Math.floor(Math.random() * images.length)];\n      document.getElementById('Computer-image').src = source;\n      await sleep(50);\n      if (i === 9){\n        return source;\n      }\n    }\n  }\n\n\n  function RockPaperScissors(){\n    //animateComputer()\n    let choices = [\"Rock\", \"Paper\", \"Scissors\"]  \n    let chosen = choices[Math.floor(Math.random() * choices.length)];\n    switch(chosen){\n      default:\n        case \"Rock\":\n          document.getElementById('Computer-image').src = Rock;\n          break;\n          case \"Paper\":\n            document.getElementById('Computer-image').src = Paper;\n            break;\n          case \"Scissors\":\n            document.getElementById('Computer-image').src = Scissors;\n            break;\n    }\n    console.log(chosen);\n    return chosen;\n  }\n\n\n  function playGame(human){\n    let result = \"\"\n    let computer = RockPaperScissors();\n      switch(human){\n        default: \n          case \"Rock\":\n              document.getElementById('Human-image').src = Rock;\n              switch(computer){\n                default:\n                  case \"Rock\": \n                  result = \"tie\";\n                  break;\n                  case \"Paper\": \n                  result =  \"loss\";\n                  break;\n                  case \"Scissors\": \n                  result =  \"win\";\n                  break;\n              }\n          break;\n          case \"Paper\":\n              document.getElementById('Human-image').src = Paper;\n              switch(computer){\n                default:\n                case \"Rock\": \n                result = \"win\";\n                break;\n                case \"Paper\": \n                result =  \"tie\";\n                break;\n                case \"Scissors\": \n                result =  \"loss\";\n                break;\n              }\n          break;\n          case \"Scissors\": \n              document.getElementById('Human-image').src = Scissors;\n              switch(computer){\n                default:\n                  case \"Rock\": \n                  result = \"loss\";\n                  break;\n                  case \"Paper\": \n                  result =  \"win\";\n                  break;\n                  case \"Scissors\": \n                  result =  \"tie\";\n                  break;\n              }\n      }\n      return result;\n  }\n\n\n\n  function keepScore(result){\n    switch(result){\n      default:\n        case \"win\":\n          win++;\n          document.querySelector('.Player').innerHTML = \"Player: \" + win;\n          break;\n        case \"loss\":\n          loss++;\n          document.querySelector('.Computer').innerHTML = \"Computer: \" + loss;\n          break;\n        case \"tie\":\n          tie++;\n          break;\n    }\n    if (win+loss+tie === 5){ //5round game\n      console.log(\"5 rounds played\", win, loss, tie)\n      let games=[win,loss]; //put result in array\n      var endResult = games.indexOf(Math.max(...games)); //search array for highest number to decide outcome\n      switch(endResult){\n        default:\n          case 0:\n            roundWin++;\n            swal(\"You win!\")\n            .then((clearAll => {\n              document.querySelector('.Player').innerHTML = \"Player: \" + win;\n              document.querySelector('.Computer').innerHTML = \"Computer: \" + loss;\n            }));\n            document.querySelector('.Win-counter').innerHTML = \"Wins: \" + roundWin;\n            break;\n          case 1:\n            roundLoss++;\n            swal(\"You lose!\")\n            .then((clearAll => {\n              document.querySelector('.Player').innerHTML = \"Player: \" + win;\n              document.querySelector('.Computer').innerHTML = \"Computer: \" + loss;\n            }));\n            document.querySelector('.Loss-counter').innerHTML = \"Losses: \" + roundLoss;\n            break;\n      }\n      if (win===loss){\n        document.body.style = 'background: white;';\n        swal(\"It's a tie!\")\n        .then((clearAll => {\n          document.querySelector('.Player').innerHTML = \"Player: \" + win;\n          document.querySelector('.Computer').innerHTML = \"Computer: \" + loss;\n        }));\n        roundTie++;\n        document.querySelector('.Tie-counter').innerHTML = \"Ties: \" + roundTie;\n      }\n      win=loss=tie=0; //reset counters\n\n      \n    }\n  }\n\n    return (\n      <div className=\"App\">\n          <main className=\"App-content\">\n            <h1>Rock Paper Scissors</h1>\n            <div>Rounds</div>\n            <div className = \"Scoreboard\">\n            <a className=\"Win-counter\">Wins: 0</a>\n            <a className=\"Loss-counter\">Losses: 0</a>\n            <a className=\"Tie-counter\">Ties: 0</a>\n            </div>\n            <div className = \"Images\">\n              <img id= \"Human-image\" src={Paper} width = \"100\" height = \"100\"></img>\n              <img id=\"Computer-image\" src={Paper} width = \"100\" height = \"100\"></img> \n            </div>\n            <div className=\"Image-labels\"> <a className=\"Player\">Player: 0</a> <a className=\"Computer \">Computer: 0</a> </div>\n            <div className=\"Buttons\">\n              <button className = \"button\" onClick = {() => keepScore(playGame(\"Rock\"))}>Rock</button>\n              <button className = \"button\" onClick = {() => keepScore(playGame(\"Paper\"))}>Paper</button>\n              <button className = \"button\" onClick = {() => keepScore(playGame(\"Scissors\"))}>Scissors</button>\n              </div>\n          </main>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}